name: Continuous Integration

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'releases/**'
      - '.github/**'
      - '!.github/workflows/**'

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd sdks/js && npm install
          cd ../controlplane && go mod download
          cd ../cli && go mod download

      - name: Run tests
        run: |
          cd controlplane && go test ./... -race -coverprofile=coverage.txt -covermode=atomic
          cd ../cli && go test ./... -race -coverprofile=coverage.txt -covermode=atomic

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Control Plane
        run: cd controlplane && docker-compose build

      - name: Run Integration Tests
        run: |
          cd controlplane && docker-compose up -d
          # Add integration test commands here
          docker-compose down

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
